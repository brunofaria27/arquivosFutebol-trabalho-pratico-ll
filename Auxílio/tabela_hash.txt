Observações:
- O primeiro ajuste é trabalharmos com blocos, de tal forma que o acesso à memória secundária seja eficiente. Se nós fôssemos acessar cada elemento da tabela individualmente,
o processo todo ficaria muito lento. E o segundo ajuste é permitir que a tabela cresça indefinidamente. Nós não poderemos limitar a quantidade de entidades que serão inseridas
no arquivo de dados e, assim, também não podemos limitar o tamanho do índice.
- Cada arquivo de deve mostrar o id e sua posição no arquivo original.
- Buckets: cada endereço contém um bloco de chaves que, aqui, chamaremos de cesto (Buckets).
- Hash Extensível: Ela é uma tabela que trabalha com cestos e, quando um cesto estoura a sua capacidade, a tabela cresce e apenas as chaves 
daquele cesto estourado precisam ser reposicionadas. Da mesma forma como vimos na página anterior (sobre cestos), para que essa tabela funcione direitinho, os cestos devem ser
de tamanho fixo. recomenda-se usar chaves e valores de tamanho fixo também. Note também que a tabela hash extensível não usa encadeamento entre os cestos. Na verdade, os ponteiros
aparecem apenas no diretório, que cresce de acordo com a necessidade.
  Imagens de exemplo Hash Extensível: https://github.com/brunofaria27/AEDs3/blob/main/M%C3%B3dulos/M%C3%B3dulo%208%20-%20Tabelas%20hash%20extens%C3%ADveis/Hash%20extens%C3%ADvel/Slide%20%2305%20-%20Hash%20extens%C3%ADvel.pdf